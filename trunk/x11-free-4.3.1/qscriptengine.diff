--- qscriptengine.cpp.org	2007-08-07 20:08:43.000000000 +0700
+++ qscriptengine.cpp	2007-10-10 11:10:21.000000000 +0700
@@ -3474,7 +3474,7 @@
 
 
 #if defined(Q_WS_X11) || defined(Q_WS_QWS) || defined(Q_WS_MAC)
-static void thaiWordBreaks(const QChar *string, const int len, QCharAttributes *attributes)
+static void thaiWordBreaks(const QChar *string, int from, const int len, QCharAttributes *attributes)
 {
 #ifdef QT_NO_TEXTCODEC
     Q_UNUSED(string);
@@ -3488,7 +3488,7 @@
 #ifndef QT_NO_LIBRARY
     /* load libthai dynamically */
     if (!th_brk && thaiCodec) {
-        th_brk = (th_brk_def)QLibrary::resolve(QLatin1String("thai"), "th_brk");
+        th_brk = (th_brk_def)QLibrary::resolve(QLatin1String("thai"),0,"th_brk");
         if (!th_brk)
             thaiCodec = 0;
     }
@@ -3500,23 +3500,35 @@
     QByteArray cstr = thaiCodec->fromUnicode(QString(string, len));
 
     int brp[128];
-    int *break_positions = brp;
+    int *break_positions = brp;	
     int numbreaks = th_brk(cstr.constData(), break_positions, 128);
+
     if (numbreaks > 128) {
         break_positions = new int[numbreaks];
         numbreaks = th_brk(cstr.data(),break_positions, numbreaks);
     }
 
-    for (int i = 0; i < len - 1; ++i)
+    static int t_len = 0;
+    t_len += len;
+
+    for (int i = from; i < from+len; ++i){
+//Set Char Stop
+	if(string[i-from].unicode()==0x0e48 || string[i-from].unicode()==0x0e49 || string[i-from].unicode()==0x0e4a || string[i-from].unicode()==0x0e4b || string[i-from].unicode()==0x0e34 || string[i-from].unicode()==0x0e35 || string[i-from].unicode()==0x0e36 || string[i-from].unicode()==0x0e37 || string[i-from].unicode()==0x0e47 || string[i-from].unicode()==0x0e31 || string[i-from].unicode()==0x0e4d || string[i-from].unicode()==0x0e4c || string[i-from].unicode()==0x0e38 || string[i-from].unicode()==0x0e39 || string[i-from].unicode()==0x0e3a)
+	{ 	
+		attributes[i].charStop=0;}
+		//qDebug("AA[%d] : %d >> %d",i,string[i].unicode(),attributes[i].charStop);
         attributes[i].lineBreakType = QCharAttributes::NoBreak;
+//	qDebug("Attributes linebreak : %d ",attributes[i].lineBreakType); //Gol debug
+	}
 
-    for (int i = 0; i < numbreaks; ++i) {
+for (int i = 0; i < numbreaks; ++i) {
         if (break_positions[i] > 0)
-            attributes[break_positions[i]-1].lineBreakType = QCharAttributes::Break;
+            attributes[break_positions[i]-1+from].lineBreakType = QCharAttributes::Break;
     }
 
     if (break_positions != brp)
         delete [] break_positions;
+
 #endif // QT_NO_TEXTCODEC
 }
 #endif
@@ -3527,7 +3539,7 @@
 {
     Q_UNUSED(script);
     Q_ASSERT(script == QUnicodeTables::Thai);
-    thaiWordBreaks(text.unicode() + from, len, attributes);
+    thaiWordBreaks(text.unicode() + from, from, len, attributes);
 }
 #endif
 
